{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import Fs from 'fs-extra';\nimport bytes from 'bytes';\nimport chalk from 'chalk';\nimport { gzipSizeFromFileSync } from 'gzip-size';\n\nconst fileStats = async (pathName: string) => {\n\treturn await Fs.promises.stat(pathName);\n};\n\nconst formatStats = async pathName => {\n\tlet stats =  await Fs.promises.stat(pathName);\n\tstats.gzip = gzipSizeFromFileSync(pathName)\n\treturn stats;\n}\n\nconst computeFileStats = async pathName => {\n\tconst stats = await formatStats(pathName);\n\treturn [stats.size, stats.gzip];\n}\n\nconst computeDirectoryStats = async (pathName, nested = false) => {\n\tconst entries = await Fs.promises.readdir(pathName);\n\tconst stats = await Promise.all(\n\t\tentries.map(async entry => {\n\t\t\tconst stats = await fileStats(pathName + '/' + entry);\n\t\t\treturn stats.isDirectory() ? await computeDirectoryStats(pathName + '/' + entry, true) : formatStats(pathName + '/' + entry);\n\t\t}),\n\t);\n\tif (nested) return stats.flat();\n\tconst size = stats.flat().reduce((a, b) => a + b.size, 0);\n\tconst gzip = stats.flat().reduce((a, b) => a + b.gzip, 0);\n\treturn [size, gzip]\n};\n\nconst computeSize = async (pathName) => {\n\tconst file = await fileStats(pathName);\n\tconst [size, gzip] = file.isDirectory() ? await computeDirectoryStats(pathName) : computeFileStats(pathName)\n\tconsole.log(chalk.blue(`size (${pathName}): `), chalk.dim(`${bytes.format(size, {unitSeparator: ' '})} bundle | ${bytes.format(gzip, {unitSeparator: ' '})} gzip`))\n};\n\nexport const runSize = (pathName: string): any => {\n\treturn {\n\t\tname: 'run-size',\n\t\tcloseBundle: async () => computeSize(pathName)\n\t};\n};\n\n// Docs\n"],"names":["gzipSizeFromFileSync","stats"],"mappings":";;;;;;AAKA,MAAM,YAAY,OAAO,aAAqB;AAC7C,SAAO,MAAM,GAAG,SAAS,KAAK,QAAQ;AACvC;AAEA,MAAM,cAAc,OAAM,aAAY;AACrC,MAAI,QAAS,MAAM,GAAG,SAAS,KAAK,QAAQ;AAC5C,QAAM,OAAOA,SAAAA,qBAAqB,QAAQ;AAC1C,SAAO;AACR;AAEA,MAAM,mBAAmB,OAAM,aAAY;AAC1C,QAAM,QAAQ,MAAM,YAAY,QAAQ;AACxC,SAAO,CAAC,MAAM,MAAM,MAAM,IAAI;AAC/B;AAEA,MAAM,wBAAwB,OAAO,UAAU,SAAS,UAAU;AACjE,QAAM,UAAU,MAAM,GAAG,SAAS,QAAQ,QAAQ;AAClD,QAAM,QAAQ,MAAM,QAAQ;AAAA,IAC3B,QAAQ,IAAI,OAAM,UAAS;AAC1B,YAAMC,SAAQ,MAAM,UAAU,WAAW,MAAM,KAAK;AACpD,aAAOA,OAAM,YAAA,IAAgB,MAAM,sBAAsB,WAAW,MAAM,OAAO,IAAI,IAAI,YAAY,WAAW,MAAM,KAAK;AAAA,IAAA,CAC3H;AAAA,EAAA;AAEF,MAAI,OAAQ,QAAO,MAAM,KAAA;AACzB,QAAM,OAAO,MAAM,KAAA,EAAO,OAAO,CAAC,GAAG,MAAM,IAAI,EAAE,MAAM,CAAC;AACxD,QAAM,OAAO,MAAM,KAAA,EAAO,OAAO,CAAC,GAAG,MAAM,IAAI,EAAE,MAAM,CAAC;AACxD,SAAO,CAAC,MAAM,IAAI;AACnB;AAEA,MAAM,cAAc,OAAO,aAAa;AACvC,QAAM,OAAO,MAAM,UAAU,QAAQ;AACrC,QAAM,CAAC,MAAM,IAAI,IAAI,KAAK,gBAAgB,MAAM,sBAAsB,QAAQ,IAAI,iBAAiB,QAAQ;AAC3G,UAAQ,IAAI,MAAM,KAAK,SAAS,QAAQ,KAAK,GAAG,MAAM,IAAI,GAAG,MAAM,OAAO,MAAM,EAAC,eAAe,IAAA,CAAI,CAAC,aAAa,MAAM,OAAO,MAAM,EAAC,eAAe,IAAA,CAAI,CAAC,OAAO,CAAC;AACnK;AAEO,MAAM,UAAU,CAAC,aAA0B;AACjD,SAAO;AAAA,IACN,MAAM;AAAA,IACN,aAAa,YAAY,YAAY,QAAQ;AAAA,EAAA;AAE/C;;"}